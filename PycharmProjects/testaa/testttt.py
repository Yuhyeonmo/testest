# -*- coding: utf-8 -*-
import json
import os
import re
import urllib.request
import datetime
from random import randint
from bs4 import BeautifulSoup
from slackclient import SlackClient
from flask import Flask, request, make_response, render_template

app = Flask(__name__)

slack_token = 'xoxb-'
slack_client_id = ''
slack_client_secret = '4573128035c6e79e6d7e6a9deea29edc'
slack_verification = '412BDhY0MC9xb9eE2MAPkRSj'
sc = SlackClient(slack_token)

dict = {}
Game = {}
TO = {}
game_list = ['베이스볼', '업앤다운', '가위바위보', '연애심리테스트', "성격테스트1", "성격테스트2", "31게임", "제작자"]


def made_by(user_id):
    keywords = []
    keywords.append("Made By")
    keywords.append(
        "◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇\n◇◇◆◆◆◆◇◇◇◆◇◇◇◆◆◆◆◆◇◇◇◆◇◇◇◇◆◆◆◇◆◆◆◆◇◇◇◆◆◆◇◆◆◆◇◆◇◇◇\n◇◆◇◇◇◇◆◇◇◆◇◇◇◇◇◇◇◆◇◇◇◆◇◇◇◇◆◇◇◇◆◇◇◇◇◇◇◆◇◇◇◆◇◇◇◆◇◇◇\n◇◆◇◇◇◇◆◆◆◆◇◇◇◆◆◆◆◆◇◆◆◆◇◇◇◇◆◇◇◇◆◇◇◇◇◇◇◆◇◇◇◆◇◇◇◆◇◇◇\n◇◆◇◇◇◇◆◇◇◆◇◇◇◆◇◇◇◇◇◇◇◆◇◇◇◇◆◆◆◆◆◆◆◆◇◇◇◆◇◇◇◆◇◇◇◆◆◆◇\n◇◇◆◆◆◆◇◇◇◆◇◇◇◆◇◇◇◇◇◇◇◆◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◆◇◇◇◆◇◇◇◆◇◇◇\n◇◇◇◇◇◇◇◇◇◇◇◇◇◆◆◆◆◆◆◇◇◆◇◇◇◆◆◆◆◆◆◆◆◆◆◇◇◆◆◆◇◆◆◆◇◆◇◇◇\n◇◇◆◆◆◆◆◆◆◆◇◇◇◇◇◇◇◇◇◇◇◆◇◇◇◇◇◇◇◇◆◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇\n◇◇◇◇◇◇◇◇◇◆◇◇◇◇◇◆◆◆◆◆◆◇◇◇◇◇◇◆◆◆◆◆◆◇◇◇◇◇◇◆◆◆◆◆◆◇◇◇◇\n◇◇◆◆◆◆◆◆◆◆◇◇◇◇◆◇◇◇◇◇◇◆◇◇◇◇◆◇◇◇◇◇◇◆◇◇◇◇◆◇◇◇◇◇◇◆◇◇◇\n◇◇◆◇◇◇◇◇◇◇◇◇◇◇◆◇◇◇◇◇◇◆◇◇◇◇◆◇◇◇◇◇◇◆◇◇◇◇◆◇◇◇◇◇◇◆◇◇◇\n◇◇◆◆◆◆◆◆◆◆◇◇◇◇◇◆◆◆◆◆◆◇◇◇◇◇◇◆◆◆◆◆◆◇◇◇◇◇◇◆◆◆◆◆◆◇◇◇◇\n◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇")

    del_user_id(user_id)
    return u'\n'.join(keywords)


def del_user_id(user_id):
    global Game, dict
    if user_id in Game:
        del Game[user_id]
    if user_id in dict:
        del dict[user_id]


def thirtyone_game(text, user_id):
    global Game, dict, TO
    user_answer = text.replace('<@UEXDMJ0HY> ', '')
    if user_answer == '종료':
        del_user_id(user_id)
        return u'\n'.join(['Bye Bye~!'])

    if user_id not in dict:
        dict[user_id] = 0
        TO[user_id] = False

    user_answers = user_answer.split(' ')
    print(user_answers)

    if int(user_answers[0]) - 1 != int(dict[user_id]):
        print("1문제", int(user_answers[0]) - 1, int(dict[user_id]))
        return wrong_answer()
    if not is_right_sequence(user_answers):
        print("2문제")
        return wrong_answer()

    keywords = []
    if have_thirty_one(user_answers):
        keywords.append("You Lose! ㅋ")
        del_user_id(user_id)
        del TO[user_id]
        return u'\n'.join(keywords)

    if not TO[user_id]:
        if int(user_answers[len(user_answers) - 1]) % 4 == 1:
            keywords.append(str(int(user_answers[len(user_answers) - 1]) + 1))
            dict[user_id] = int(user_answers[len(user_answers) - 1]) + 1
            TO[user_id] = True
            return u'\n'.join(keywords)

        length = randint(1, 3)
        keywords = get_answer(length, int(user_answers[len(user_answers) - 1]))
        dict[user_id] = int(keywords[len(keywords) - 1])
        print("1", dict[user_id])

        if have_thirty_one(keywords):
            keywords = []
            keywords.append("You Win!")
            del_user_id(user_id)
            del TO[user_id]
            return u'\n'.join(keywords)

    else:
        if have_thirty_one(user_answers):
            keywords.append("You Lose! ㅋ")
            del_user_id(user_id)
            del TO[user_id]
            return u'\n'.join(keywords)

        length, number = get_win_answer(user_answers)
        for i in range(4 - length):
            number = number + 1
            keywords.append(str(number))

        dict[user_id] = keywords[3 - length]
        print("2", dict[user_id])

    return u'\n'.join(keywords)


def have_thirty_one(user_answers):
    for i in range(len(user_answers)):
        if int(user_answers[i]) >= 31:
            return True
    return False


def is_right_sequence(user_answers):
    if len(user_answers) > 3:
        return False
    for i in range(len(user_answers) - 1):
        if int(user_answers[i]) + 1 != int(user_answers[i + 1]):
            return False
    return True


def get_win_answer(user_answers):
    length = len(user_answers)
    return length, int(user_answers[length - 1])


def get_answer(length, user_answer):
    answer = []
    for i in range(length):
        if i > 0 and user_answer + i + 1 >= 31:
            continue
        answer.append(str(user_answer + i + 1))
    return answer


def example_mind_test_1():
    keywords = []

    keywords.append("샤워 습관으로 보는 후끈 연애 심리테스트!"
                    "\n ┌───────────────────────────────┐"
                    "\n │                          넌 어디부터 씻어 ?                                 │"
                    "\n │                                                                                           │"
                    "\n │             A                B                 C                  D                 │"
                    "\n │      머리부터    세수부터      몸부터           이를              │"
                    "\n │        감는다          한다          씼는다         닦는다            │"
                    "\n └───────────────────────────────┘")

    return u'\n'.join(keywords)


def example_mind_test_2():
    keywords = []
    keywords.append("┌───────────────────────────────┐"
                    "\n│                                                                                           │"
                    "\n│                                                                                           │"
                    "\n│                   당신의 발 모양을 선택해주세요!                 │"
                    "\n│                                                                                           │"
                    "\n│                                                                                           │"
                    "\n└───────────────────────────────┘"
                    "\n┌───────────────────────────────┐"
                    "\n│    A. 일반적인 발                                                              │"
                    "\n│    B. 검지발가락이 긴 발                                                 │"
                    "\n│    C. 발가락 길이가 모두 같은 발                                   │"
                    "\n│    D. 발가락이 안으로 굽은 유연한 발                           │"
                    "\n└───────────────────────────────┘")

    return u'\n'.join(keywords)


def example_mind_test_3():
    keywords = []

    keywords.append('┌───────────────────────────────┐'
                    '\n│                                                                                           │'
                    '\n│                      좋아하는 색깔로                                         │'
                    '\n│                    알아 보는 심리테스트!!                                │'
                    '\n│                                                                                           │'
                    '\n└───────────────────────────────┘'
                    '\n┌───────────────────────────────┐'
                    '\n│ a. 노랑                                                                              │'
                    '\n│ b. 파랑                                                                              │'
                    '\n│ c. 초록                                                                              │'
                    '\n│ d. 보라                                                                              │'
                    '\n│ e. 빨강                                                                              │'
                    '\n└───────────────────────────────┘')

    return u'\n'.join(keywords)


def mind_test_1(text, user_id):
    global dict
    global Game

    keywords = []

    user_answer = text.replace('<@UEXDMJ0HY> ', '')

    print(user_answer)
    if user_answer == "종료":
        del_user_id(user_id)
        return u'\n'.join(["Bye Bye~!"])
    else:
        if user_answer == 'b' or user_answer == "B":
            keywords.append("1. 세수부터 먼저하는 당신!"
                            "\n\n 샤워할때 세수부터 하는 당신은 순수한 마음을 갖고 있으며,"
                            "\n 이성에게 헌신적이고 순종적입니다."
                            "\n 배려를 잘하고 받는 것보다 베푸는 것이 먼저인 당신!"
                            "\n 순수한 마음에 상처를 받지 않는 것이 필요합니다!")
        elif user_answer == 'D' or user_answer == "d":
            keywords.append("4. 양치질을 먼저하는 당신!"
                            "\n\n 지적 호기심이 높으며 매사에 신중한 당신!"
                            "\n 너무 신중한 탓에 연애시작에 어려움이 있을수도 있으나"
                            "\n 연애를 시작하면 지적인 탐구나 상대방에 대해 많은 것을"
                            "\n 발견하고 싶어하는 경향이 있습니다.")
        elif user_answer == 'c' or user_answer == 'C':
            keywords.append("3. 몸부터 씻는 당신!"
                            "\n\n 샤워를 할 때 몸을 가장 먼저 씻는 당신은"
                            "\n 겉모습을 굉장히 중요하게 여기는 사람이며,"
                            "\n 이성을 볼 때도 패션감각, 얼굴 등을 중요시합니다."
                            "\n 하지만 좋아하는 이성이 나타나면 그 사람에게 올인하는 스타일!")
        elif user_answer == 'A' or user_answer == "a":
            keywords.append("1. 머리를 먼저 감는 당신!"
                            "\n\n 샤워를 할 때 머리를 먼저 감는 당신은 주변 사람들이 하자는데로 이끌려 다니는 스타일!"
                            "\n 겉으로는 원만한 대인관계를 유지하는 것 같지만 속으론 속앓이를 하고 있습니다."
                            "\n 이런 성격은 이성을 만날때도 마찬가지이며 이성에게 휘둘리는 편입니다."
                            "\n 감정표현을 잘하는 것이 중요합니다!")
        else:
            keywords.append("잘못입력하셨습니다."
                            "\n A B C D 중 하나만 골라주세요!")

    del_user_id(user_id)
    return u'\n'.join(keywords)


def mind_test_2(text, user_id):
    global Game, dict
    user_answer = text.replace('<@UEXDMJ0HY> ', '')
    if user_answer == '종료':
        del dict[user_id]
        return u'\n'.join(['Bye Bye~!'])

    keywords = []
    user_answer = user_answer.lower()
    if user_answer == 'a':
        keywords.append("당신은 감정이 풍부하고 사교적인 스타일!\n\n"
                        "설명 : 엄지발가락부터 새끼발가락까지 크기순서대로 위치한 발을 가진 당신은\n"
                        "감정이 풍부하고 사교적인 스타일!\n"
                        "당신은 항상 지적 욕구가 강해서 배움에 능동적인 사람입니다.\n"
                        " 사교성이 좋고 밝고 활동적이라 여행을 즐겨하기도 합니다.\n"
                        "감정이 풍부하기 때문에 다소 변덕이 심하고 까칠해 보일 수 있지만,\n"
                        "가까운 사람에게는 매우 친절하고 세심한 배려심 깊은 사람입니다.")
    elif user_answer == 'b':
        keywords.append("당신은 긍정적이고 자신감이 넘치는 스타일!\n\n"
                        "설명 : 검지 발가락이 가장 길고 새끼발가락 쪽으로 갈수록 짧아지는 발을 가진 당신은\n"
                        "긍정적이고 자신감이 넘치는 스타일!\n"
                        "활력 넘치는 당신은 매우 열정적으로 창조적이며, 수용과 습득력이 빠릅니다.\n"
                        "재기발랄하며 목표의식이 투철해 일반적으로 스포츠를 좋아합니다.\n"
                        "하지만 가끔 충동이 과할 때가 있어, 스스로 스트레스를 만드는 경우도 있다고 하니 조심하세요!")
    elif user_answer == 'c':
        keywords.append("당신은 책임감이 강하고 합리적인 스타일!\n\n"
                        "설명 : 발가락 끝이 모두 같은 위치에 놓인 일자모형의 발을 가진 당신은\n"
                        "책임감이 강하고 합리적인 스타일!\n"
                        "이성적이고 합리적인 면이 두드러지며, 팀으로 일할때 책임감이 강하게 발휘하는 스타일입니다.\n"
                        "또한 리더쉽가 함께 뛰어난 사교성을 겸비해 많은 사람들에게 신뢰를 받습니다.\n"
                        "고집이 센 편이지만, 그만큼 끈기와 집념이 강해 좀처럼 포기하는 일이 없기 때문에 성공 가능성이 큽니다.")
    elif user_answer == 'd':
        keywords.append("당신은 혼자만의 사색을 즐기는 차분한 스타일!\n\n"
                        "설명 : 유연한 발을 가지고 있는 당신은 혼자만의 사색을 즐기는 스타일!\n"
                        "당신은 비밀이 많고 사생활을 중요하게 생각합니다.\n"
                        "또 사색하는 것을 즐기는 내향적인 스타일입니다.\n"
                        "지적인 면모가 있으며 또래에 비해 정신적으로 성숙합니다.\n"
                        "가끔 기분에 따라 충동적으로 행동해 실수할 수 있으므로 주의해야 합니다.")
    else:
        return wrong_answer()

    del_user_id(user_id)
    return u'\n'.join(keywords)


def mind_test_3(text, user_id):
    global Game, dict
    user_answer = text.replace('<@UEXDMJ0HY> ', '')
    if user_answer == '종료':
        del dict[user_id]
        return u'\n'.join(['Bye Bye~!'])

    user_answer = user_answer.lower()

    if user_answer == 'a':
        result = ["노랑색을 좋아하는 당신.\n "
                  "소극적인 성격입니다. 이에 비해 심지가 아주 강합니다. 평소에는 놀랄만큼의 실력을 발휘하여 주위사람을 놀라게 하며 대단한 노력가입니다."]
    elif user_answer == 'b':
        result = ["파랑색을 좋아하는 당신.\n "
                  "당신은 몽상가입니다. 아주 우아하고 델리케이트한 분위기를 가진 사람입니다. 그래서 예술적 센스가 강하고 풍부한 감성을 지녔습니다.\n "
                  "그러나 희노 애락이 심하고 예민해서 흥분이 하기 쉽습니다."]
    elif user_answer == 'c':
        result = ["초록색을 좋아하는 당신.\n"
                  "리더쉽이 강한 사람입니다. 매우 신중하고 사물을 이성적으로 판단합니다.\n"
                  "게다가 강한 행동력을 지니고 있습니다. 성격 또한 화끈하여 주위 사람으로부터 사랑을 독차지합니다."]
    elif user_answer == 'd':
        result = ["보라색을 좋아하는 당신.\n"
                  "강한 개성의 소유자입니다. 밝고 명량한 반면 고독을 동경하는 세심하고 로맨틱한 사람입니다.\n"
                  "그런데 조금 변덕 스럽기도 하군요. 기분에 따라 제멋대로 행동"]
    elif user_answer == 'e':
        result = ["빨강색을 좋아합니다.\n"
                  "독창성이 강한 사람입니다. 생각 있고 활기찬 성격 입니다.\n"
                  "때론 반항적일 수도 있지만 어떤 힘든 일도 극복할 줄 아는 강한 사람이지요."]
    else:
        result = ["올바르지 않은 입력입니다."]

    del_user_id(user_id)
    return u'\n'.join(result)


def rock_paper_scissors():
    a = randint(0, 2)

    rock_paper_scissor = ["바위", "보", "가위"]

    return rock_paper_scissor[a]


def whowin(answer, user_answer):
    if user_answer == "바위":
        if answer == "바위":
            return ["Draw!",
                    "◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇\n◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇\n◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇\n◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇\n◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◆◇◇◇\n◇◆◆◆◆◆◇◇◇◇◇◇◇◆◆◆◆◆◇◆◆◆◆◆◇\n◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◆◇◇◇\n◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◆◇◆◇◇\n◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇\n◇◇◇◇◇◇◇◆◆◆◆◆◇◇◇◇◇◇◇◇◇◇◇◇◇\n◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇\n◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇"]
        elif answer == "보":
            return ["Win",
                    "◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇\n◇◇◇◇◇◇◇◇◇◆◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◆◇◇◇◇◇◇◇◇◇\n◇◇◇◇◇◇◇◇◆◇◆◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◆◇◆◇◇◇◇◇◇◇◇\n◇◇◇◇◇◇◇◆◇◇◇◆◇◇◇◇◇◇◇◇◇◇◇◇◇◆◇◇◇◆◇◇◇◇◇◇◇\n◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◆◆◆◆◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇\n◇◇◇◆◇◇◇◇◇◇◇◇◇◇◇◆◇◇◇◇◆◇◇◇◇◇◇◇◇◇◇◇◇◆◇◇◇\n◇◆◆◆◆◆◇◇◇◇◇◇◇◇◇◆◇◇◇◇◆◇◇◇◇◇◇◇◇◇◇◆◆◆◆◆◇\n◇◇◇◆◇◇◇◇◇◇◇◇◇◇◇◆◇◇◇◇◆◇◇◇◇◇◇◇◇◇◇◇◇◆◇◇◇\n◇◇◆◇◆◇◇◇◇◇◇◇◇◇◇◆◇◇◇◇◆◇◇◇◇◇◇◇◇◇◇◇◆◇◆◇◇\n◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◆◆◆◆◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇\n◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇\n◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇\n◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇"]
        else:
            return ["lose",
                    "◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇\n◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇\n◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇\n◇◆◆◆◆◆◆◆◆◆◆◇◇◇◇◇◇◇◇◆◆◆◆◆◆◆◆◆◆◇\n◇◇◇◆◇◇◇◇◆◇◇◇◇◇◇◇◇◇◇◇◇◆◇◇◇◇◆◇◇◇\n◇◇◇◆◇◇◇◇◆◇◇◇◇◇◇◇◇◇◇◇◇◆◇◇◇◇◆◇◇◇\n◇◇◇◆◇◇◇◇◆◇◇◇◇◇◇◇◇◇◇◇◇◆◇◇◇◇◆◇◇◇\n◇◇◇◆◇◇◇◇◆◇◇◇◇◆◆◆◆◆◇◇◇◆◇◇◇◇◆◇◇◇\n◇◇◇◆◇◇◇◇◆◇◇◇◇◇◇◇◇◇◇◇◇◆◇◇◇◇◆◇◇◇\n◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇"]
    elif user_answer == "보":
        if answer == "보":
            return ["Draw!",
                    "◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇\n◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇\n◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇\n◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇\n◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◆◇◇◇\n◇◆◆◆◆◆◇◇◇◇◇◇◇◆◆◆◆◆◇◆◆◆◆◆◇\n◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◆◇◇◇\n◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◆◇◆◇◇\n◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇\n◇◇◇◇◇◇◇◆◆◆◆◆◇◇◇◇◇◇◇◇◇◇◇◇◇\n◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇\n◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇"]
        elif answer == "가위":
            return ["Win",
                    "◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇\n◇◇◇◇◇◇◇◇◇◆◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◆◇◇◇◇◇◇◇◇◇\n◇◇◇◇◇◇◇◇◆◇◆◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◆◇◆◇◇◇◇◇◇◇◇\n◇◇◇◇◇◇◇◆◇◇◇◆◇◇◇◇◇◇◇◇◇◇◇◇◇◆◇◇◇◆◇◇◇◇◇◇◇\n◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◆◆◆◆◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇\n◇◇◇◆◇◇◇◇◇◇◇◇◇◇◇◆◇◇◇◇◆◇◇◇◇◇◇◇◇◇◇◇◇◆◇◇◇\n◇◆◆◆◆◆◇◇◇◇◇◇◇◇◇◆◇◇◇◇◆◇◇◇◇◇◇◇◇◇◇◆◆◆◆◆◇\n◇◇◇◆◇◇◇◇◇◇◇◇◇◇◇◆◇◇◇◇◆◇◇◇◇◇◇◇◇◇◇◇◇◆◇◇◇\n◇◇◆◇◆◇◇◇◇◇◇◇◇◇◇◆◇◇◇◇◆◇◇◇◇◇◇◇◇◇◇◇◆◇◆◇◇\n◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◆◆◆◆◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇\n◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇\n◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇\n◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇"]
        else:
            return ["lose",
                    "◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇\n◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇\n◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇\n◇◆◆◆◆◆◆◆◆◆◆◇◇◇◇◇◇◇◇◆◆◆◆◆◆◆◆◆◆◇\n◇◇◇◆◇◇◇◇◆◇◇◇◇◇◇◇◇◇◇◇◇◆◇◇◇◇◆◇◇◇\n◇◇◇◆◇◇◇◇◆◇◇◇◇◇◇◇◇◇◇◇◇◆◇◇◇◇◆◇◇◇\n◇◇◇◆◇◇◇◇◆◇◇◇◇◇◇◇◇◇◇◇◇◆◇◇◇◇◆◇◇◇\n◇◇◇◆◇◇◇◇◆◇◇◇◇◆◆◆◆◆◇◇◇◆◇◇◇◇◆◇◇◇\n◇◇◇◆◇◇◇◇◆◇◇◇◇◇◇◇◇◇◇◇◇◆◇◇◇◇◆◇◇◇\n◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇"]
    elif user_answer == "가위":
        if answer == "가위":
            return ["Draw!",
                    "◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇\n◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇\n◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇\n◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇\n◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◆◇◇◇\n◇◆◆◆◆◆◇◇◇◇◇◇◇◆◆◆◆◆◇◆◆◆◆◆◇\n◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◆◇◇◇\n◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◆◇◆◇◇\n◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇\n◇◇◇◇◇◇◇◆◆◆◆◆◇◇◇◇◇◇◇◇◇◇◇◇◇\n◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇\n◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇"]
        elif answer == "보":
            return ["lose",
                    "◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇\n◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇\n◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇\n◇◆◆◆◆◆◆◆◆◆◆◇◇◇◇◇◇◇◇◆◆◆◆◆◆◆◆◆◆◇\n◇◇◇◆◇◇◇◇◆◇◇◇◇◇◇◇◇◇◇◇◇◆◇◇◇◇◆◇◇◇\n◇◇◇◆◇◇◇◇◆◇◇◇◇◇◇◇◇◇◇◇◇◆◇◇◇◇◆◇◇◇\n◇◇◇◆◇◇◇◇◆◇◇◇◇◇◇◇◇◇◇◇◇◆◇◇◇◇◆◇◇◇\n◇◇◇◆◇◇◇◇◆◇◇◇◇◆◆◆◆◆◇◇◇◆◇◇◇◇◆◇◇◇\n◇◇◇◆◇◇◇◇◆◇◇◇◇◇◇◇◇◇◇◇◇◆◇◇◇◇◆◇◇◇\n◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇"]
        else:
            return ["Win",
                    "◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇\n◇◇◇◇◇◇◇◇◇◆◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◆◇◇◇◇◇◇◇◇◇\n◇◇◇◇◇◇◇◇◆◇◆◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◆◇◆◇◇◇◇◇◇◇◇\n◇◇◇◇◇◇◇◆◇◇◇◆◇◇◇◇◇◇◇◇◇◇◇◇◇◆◇◇◇◆◇◇◇◇◇◇◇\n◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◆◆◆◆◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇\n◇◇◇◆◇◇◇◇◇◇◇◇◇◇◇◆◇◇◇◇◆◇◇◇◇◇◇◇◇◇◇◇◇◆◇◇◇\n◇◆◆◆◆◆◇◇◇◇◇◇◇◇◇◆◇◇◇◇◆◇◇◇◇◇◇◇◇◇◇◆◆◆◆◆◇\n◇◇◇◆◇◇◇◇◇◇◇◇◇◇◇◆◇◇◇◇◆◇◇◇◇◇◇◇◇◇◇◇◇◆◇◇◇\n◇◇◆◇◆◇◇◇◇◇◇◇◇◇◇◆◇◇◇◇◆◇◇◇◇◇◇◇◇◇◇◇◆◇◆◇◇\n◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◆◆◆◆◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇\n◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇\n◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇\n◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇"]
    else:
        return ["올바르지 않은 값입니다!!!!"]


def game_rock_paper_scissors(text, user_id):
    global dict
    global Game

    user_answer = text.replace('<@UEXDMJ0HY> ', '')

    print(user_answer)
    if user_answer == "종료":
        del_user_id(user_id)
        return u'\n'.join(["Bye Bye~!"])

    rps = rock_paper_scissors()
    dict[user_id] = rps

    answer = dict[user_id]

    result = whowin(answer, user_answer)
    del dict[user_id]

    return u'\n'.join(result)


def up_and_down(text, user_id):
    global dict
    global Game
    user_answer = text.replace('<@UEXDMJ0HY> ', '')

    if user_id not in dict:
        dict[user_id] = randint(0, 99)

    if user_answer == "종료":
        del_user_id(user_id)
        result = ["bye bye~!"]
    else:
        try:
            answer = dict[user_id]

            if answer > int(user_answer):
                result = [
                    "◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇\n◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◆◇◇\n◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◆◇◇\n◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◆◇◇\n◇◆◇◇◇◆◇◇◆◆◆◆◇◇◇◆◇◇\n◇◆◇◇◇◆◇◇◆◇◇◇◆◇◇◆◇◇\n◇◆◇◇◇◆◇◇◆◇◇◇◆◇◇◆◇◇\n◇◆◇◇◇◆◇◇◆◇◇◇◆◇◇◆◇◇\n◇◆◇◇◇◆◇◇◆◇◇◇◆◇◇◇◇◇\n◇◆◇◇◇◆◇◇◆◇◇◇◆◇◇◆◇◇\n◇◇◆◆◆◆◇◇◆◆◆◆◇◇◇◆◇◇\n◇◇◇◇◇◇◇◇◆◇◇◇◇◇◇◇◇◇\n◇◇◇◇◇◇◇◇◆◇◇◇◇◇◇◇◇◇\n◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇"]
            elif answer < int(user_answer):
                result = [
                    "◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇\n◇◇◇◇◇◆◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◆◇◇\n◇◇◇◇◇◆◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◆◇◇\n◇◇◇◇◇◆◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◆◇◇\n◇◇◆◆◆◆◇◇◇◆◆◆◇◇◇◆◇◇◇◆◇◇◇◆◇◆◆◆◆◇◇◇◆◇◇\n◇◆◇◇◇◆◇◇◆◇◇◇◆◇◇◆◇◇◇◆◇◇◇◆◇◆◇◇◇◆◇◇◆◇◇\n◇◆◇◇◇◆◇◇◆◇◇◇◆◇◇◇◆◇◆◇◆◇◆◇◇◆◇◇◇◆◇◇◆◇◇\n◇◆◇◇◇◆◇◇◆◇◇◇◆◇◇◇◆◇◆◇◆◇◆◇◇◆◇◇◇◆◇◇◆◇◇\n◇◆◇◇◇◆◇◇◆◇◇◇◆◇◇◇◆◇◆◇◆◇◆◇◇◆◇◇◇◆◇◇◇◇◇\n◇◆◇◇◇◆◇◇◆◇◇◇◆◇◇◇◇◆◇◇◇◆◇◇◇◆◇◇◇◆◇◇◆◇◇\n◇◇◆◆◆◆◇◇◇◆◆◆◇◇◇◇◇◆◇◇◇◆◇◇◇◆◇◇◇◆◇◇◆◇◇\n◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇\n◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇"]
            else:
                del_user_id(user_id)
                result = [
                    "◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇\n◇◆◇◇◇◆◇◇◇◆◇◇◇◇◇◆◇◇◇◇◇◇◆◆◇◇◇◇◆◇◇◇◇◇◇◆◇◇\n◇◆◇◇◇◆◇◇◇◆◇◇◇◇◇◆◇◇◇◇◇◇◆◆◇◇◇◇◆◇◇◇◇◇◇◆◇◇\n◇◆◇◇◇◆◇◇◇◆◇◇◇◇◇◆◇◇◇◇◇◇◆◇◆◇◇◇◆◇◇◇◇◇◇◆◇◇\n◇◇◆◇◆◇◆◇◆◇◇◇◇◇◇◆◇◇◇◇◇◇◆◇◆◇◇◇◆◇◇◇◇◇◇◆◇◇\n◇◇◆◇◆◇◆◇◆◇◇◇◇◇◇◆◇◇◇◇◇◇◆◇◇◆◇◇◆◇◇◇◇◇◇◆◇◇\n◇◇◆◇◆◇◆◇◆◇◇◇◇◇◇◆◇◇◇◇◇◇◆◇◇◆◇◇◆◇◇◇◇◇◇◆◇◇\n◇◇◆◇◆◇◆◇◆◇◇◇◇◇◇◆◇◇◇◇◇◇◆◇◇◇◆◇◆◇◇◇◇◇◇◆◇◇\n◇◇◇◆◇◇◇◆◇◇◇◇◇◇◇◆◇◇◇◇◇◇◆◇◇◇◆◇◆◇◇◇◇◇◇◇◇◇\n◇◇◇◆◇◇◇◆◇◇◇◇◇◇◇◆◇◇◇◇◇◇◆◇◇◇◇◆◆◇◇◇◇◇◇◆◇◇\n◇◇◇◆◇◇◇◆◇◇◇◇◇◇◇◆◇◇◇◇◇◇◆◇◇◇◇◆◆◇◇◇◇◇◇◆◇◇\n◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇\n◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇"]
        except Exception:
            result = ["잘못입력하셨습니다!"]

    return u'\n'.join(result)


def check_strike(s, b):
    if s is 0:
        if b is 4:
            return "◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇\n◇◇◇◇◆◇◇◆◆◆◆◆◇◇◇◇◇◇◇◇◇◇◆◇◇◆◇◇◇◇◇◇◇◇◇◆◇◇\n◇◇◇◆◆◇◇◆◇◇◇◇◆◇◇◇◇◇◇◇◇◇◆◇◇◆◇◇◇◇◇◇◇◇◇◆◇◇\n◇◇◇◆◆◇◇◆◇◇◇◇◆◇◇◇◇◇◇◇◇◇◆◇◇◆◇◇◇◇◇◇◇◇◇◆◇◇\n◇◇◆◇◆◇◇◆◇◇◇◇◆◇◇◇◆◆◆◇◇◇◆◇◇◆◇◇◇◆◆◆◇◇◇◆◇◇\n◇◇◆◇◆◇◇◆◆◆◆◆◇◇◇◆◇◇◇◆◇◇◆◇◇◆◇◇◆◇◇◇◆◇◇◆◇◇\n◇◆◇◇◆◇◇◆◇◇◇◇◆◇◇◇◇◇◇◆◇◇◆◇◇◆◇◇◆◇◇◇◇◇◇◆◇◇\n◇◆◇◇◆◇◇◆◇◇◇◇◆◇◇◇◆◆◆◆◇◇◆◇◇◆◇◇◇◆◆◆◇◇◇◆◇◇\n◇◆◆◆◆◆◇◆◇◇◇◇◆◇◇◆◇◇◇◆◇◇◆◇◇◆◇◇◇◇◇◇◆◇◇◇◇◇\n◇◇◇◇◆◇◇◆◇◇◇◇◆◇◇◆◇◇◆◆◇◇◆◇◇◆◇◇◆◇◇◇◆◇◇◆◇◇\n◇◇◇◇◆◇◇◆◆◆◆◆◇◇◇◇◆◆◇◆◇◇◆◇◇◆◇◇◇◆◆◆◇◇◇◆◇◇\n◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇\n◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇"
        elif b is 3:
            return "◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇\n◇◇◆◆◆◇◇◇◇◇◇◆◆◆◆◆◇◇◇◇◇◇◇◇◇◇◆◇◇◆◇◇◇◇◇◇◇◇\n◇◆◇◇◇◆◇◇◇◇◇◆◇◇◇◇◆◇◇◇◇◇◇◇◇◇◆◇◇◆◇◇◇◇◇◇◇◇\n◇◇◇◇◇◆◇◇◇◇◇◆◇◇◇◇◆◇◇◇◇◇◇◇◇◇◆◇◇◆◇◇◇◇◇◇◇◇\n◇◇◇◇◇◆◇◇◇◇◇◆◇◇◇◇◆◇◇◇◆◆◆◇◇◇◆◇◇◆◇◇◇◆◆◆◇◇\n◇◇◆◆◆◇◇◇◇◇◇◆◆◆◆◆◇◇◇◆◇◇◇◆◇◇◆◇◇◆◇◇◆◇◇◇◆◇\n◇◇◇◇◇◆◇◇◇◇◇◆◇◇◇◇◆◇◇◇◇◇◇◆◇◇◆◇◇◆◇◇◆◇◇◇◇◇\n◇◇◇◇◇◆◇◇◇◇◇◆◇◇◇◇◆◇◇◇◆◆◆◆◇◇◆◇◇◆◇◇◇◆◆◆◇◇\n◇◇◇◇◇◆◇◇◇◇◇◆◇◇◇◇◆◇◇◆◇◇◇◆◇◇◆◇◇◆◇◇◇◇◇◇◆◇\n◇◆◇◇◇◆◇◇◇◇◇◆◇◇◇◇◆◇◇◆◇◇◆◆◇◇◆◇◇◆◇◇◆◇◇◇◆◇\n◇◇◆◆◆◇◇◇◇◇◇◆◆◆◆◆◇◇◇◇◆◆◇◆◇◇◆◇◇◆◇◇◇◆◆◆◇◇\n◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇\n◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇"
        elif b is 2:
            return "◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇\n◇◇◆◆◆◇◇◇◇◇◇◆◆◆◆◆◇◇◇◇◇◇◇◇◇◇◆◇◇◆◇◇◇◇◇◇◇◇\n◇◆◇◇◇◆◇◇◇◇◇◆◇◇◇◇◆◇◇◇◇◇◇◇◇◇◆◇◇◆◇◇◇◇◇◇◇◇\n◇◆◇◇◇◆◇◇◇◇◇◆◇◇◇◇◆◇◇◇◇◇◇◇◇◇◆◇◇◆◇◇◇◇◇◇◇◇\n◇◇◇◇◇◆◇◇◇◇◇◆◇◇◇◇◆◇◇◇◆◆◆◇◇◇◆◇◇◆◇◇◇◆◆◆◇◇\n◇◇◇◇◆◇◇◇◇◇◇◆◆◆◆◆◇◇◇◆◇◇◇◆◇◇◆◇◇◆◇◇◆◇◇◇◆◇\n◇◇◇◆◇◇◇◇◇◇◇◆◇◇◇◇◆◇◇◇◇◇◇◆◇◇◆◇◇◆◇◇◆◇◇◇◇◇\n◇◇◆◇◇◇◇◇◇◇◇◆◇◇◇◇◆◇◇◇◆◆◆◆◇◇◆◇◇◆◇◇◇◆◆◆◇◇\n◇◆◇◇◇◇◇◇◇◇◇◆◇◇◇◇◆◇◇◆◇◇◇◆◇◇◆◇◇◆◇◇◇◇◇◇◆◇\n◇◆◇◇◇◇◇◇◇◇◇◆◇◇◇◇◆◇◇◆◇◇◆◆◇◇◆◇◇◆◇◇◆◇◇◇◆◇\n◇◆◆◆◆◆◇◇◇◇◇◆◆◆◆◆◇◇◇◇◆◆◇◆◇◇◆◇◇◆◇◇◇◆◆◆◇◇\n◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇\n◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇"
        elif b is 1:
            return "◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇\n◇◇◇◆◇◇◇◇◇◇◇◆◆◆◆◆◇◇◇◇◇◇◇◇◇◇◆◇◇◆◇◇◇◇◇\n◇◇◆◆◇◇◇◇◇◇◇◆◇◇◇◇◆◇◇◇◇◇◇◇◇◇◆◇◇◆◇◇◇◇◇\n◇◇◇◆◇◇◇◇◇◇◇◆◇◇◇◇◆◇◇◇◇◇◇◇◇◇◆◇◇◆◇◇◇◇◇\n◇◇◇◆◇◇◇◇◇◇◇◆◇◇◇◇◆◇◇◇◆◆◆◇◇◇◆◇◇◆◇◇◇◇◇\n◇◇◇◆◇◇◇◇◇◇◇◆◆◆◆◆◇◇◇◆◇◇◇◆◇◇◆◇◇◆◇◇◇◇◇\n◇◇◇◆◇◇◇◇◇◇◇◆◇◇◇◇◆◇◇◇◇◇◇◆◇◇◆◇◇◆◇◇◇◇◇\n◇◇◇◆◇◇◇◇◇◇◇◆◇◇◇◇◆◇◇◇◆◆◆◆◇◇◆◇◇◆◇◇◇◇◇\n◇◇◇◆◇◇◇◇◇◇◇◆◇◇◇◇◆◇◇◆◇◇◇◆◇◇◆◇◇◆◇◇◇◇◇\n◇◇◇◆◇◇◇◇◇◇◇◆◇◇◇◇◆◇◇◆◇◇◆◆◇◇◆◇◇◆◇◇◇◇◇\n◇◇◇◆◇◇◇◇◇◇◇◆◆◆◆◆◇◇◇◇◆◆◇◆◇◇◆◇◇◆◇◇◇◇◇\n◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇\n◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇"
        elif b is 0:
            return "◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇\n◇◇◇◆◆◆◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◆◇◇\n◇◇◆◇◇◇◆◇◇◇◇◇◇◇◇◇◇◆◇◇◇◇◇◇◆◇◇\n◇◆◇◇◇◇◇◆◇◇◇◇◇◇◇◇◇◆◇◇◇◇◇◇◆◇◇\n◇◆◇◇◇◇◇◆◇◇◆◇◇◇◆◇◆◆◆◇◇◇◇◇◆◇◇\n◇◆◇◇◇◇◇◆◇◇◆◇◇◇◆◇◇◆◇◇◇◇◇◇◆◇◇\n◇◆◇◇◇◇◇◆◇◇◆◇◇◇◆◇◇◆◇◇◇◇◇◇◆◇◇\n◇◆◇◇◇◇◇◆◇◇◆◇◇◇◆◇◇◆◇◇◇◇◇◇◆◇◇\n◇◆◇◇◇◇◇◆◇◇◆◇◇◇◆◇◇◆◇◇◇◇◇◇◇◇◇\n◇◇◆◇◇◇◆◇◇◇◆◇◇◇◆◇◇◆◇◇◇◇◇◇◆◇◇\n◇◇◇◆◆◆◇◇◇◇◇◆◆◆◆◇◇◇◆◇◇◇◇◇◆◇◇\n◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇\n◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇"
    elif s is 1:
        if b is 3:
            return "◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇\n◇◇◇◆◇◇◇◇◇◇◇◇◆◆◆◆◇◇◇◇◇◇◇◇◆◆◆◇◇◇◇◇◇◆◆◆◆◆◇◇◇◇◇◇\n◇◇◆◆◇◇◇◇◇◇◇◆◇◇◇◇◆◇◇◇◇◇◇◆◇◇◇◆◇◇◇◇◇◆◇◇◇◇◆◇◇◇◇◇\n◇◇◇◆◇◇◇◇◇◇◇◆◇◇◇◇◆◇◇◇◇◇◇◇◇◇◇◆◇◇◇◇◇◆◇◇◇◇◆◇◇◇◇◇\n◇◇◇◆◇◇◇◇◇◇◇◆◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◆◇◇◇◇◇◆◇◇◇◇◆◇◇◇◇◇\n◇◇◇◆◇◇◇◇◇◇◇◇◆◆◇◇◇◇◇◇◇◇◇◇◆◆◆◇◇◇◇◇◇◆◆◆◆◆◇◇◇◇◇◇\n◇◇◇◆◇◇◇◇◇◇◇◇◇◇◆◆◇◇◇◇◇◇◇◇◇◇◇◆◇◇◇◇◇◆◇◇◇◇◆◇◇◇◇◇\n◇◇◇◆◇◇◇◇◇◇◇◇◇◇◇◇◆◇◇◇◇◇◇◇◇◇◇◆◇◇◇◇◇◆◇◇◇◇◆◇◇◇◇◇\n◇◇◇◆◇◇◇◇◇◇◇◆◇◇◇◇◆◇◇◇◇◇◇◇◇◇◇◆◇◇◇◇◇◆◇◇◇◇◆◇◇◇◇◇\n◇◇◇◆◇◇◇◇◇◇◇◆◇◇◇◇◆◇◇◇◇◇◇◆◇◇◇◆◇◇◇◇◇◆◇◇◇◇◆◇◇◇◇◇\n◇◇◇◆◇◇◇◇◇◇◇◇◆◆◆◆◇◇◇◇◇◇◇◇◆◆◆◇◇◇◇◇◇◆◆◆◆◆◇◇◇◇◇◇\n◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇\n◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇"
        elif b is 2:
            return "◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇\n◇◇◇◆◇◇◇◇◇◇◇◇◆◆◆◆◇◇◇◇◇◇◇◇◆◆◆◇◇◇◇◇◇◆◆◆◆◆◇◇◇◇◇◇\n◇◇◆◆◇◇◇◇◇◇◇◆◇◇◇◇◆◇◇◇◇◇◇◆◇◇◇◆◇◇◇◇◇◆◇◇◇◇◆◇◇◇◇◇\n◇◇◇◆◇◇◇◇◇◇◇◆◇◇◇◇◆◇◇◇◇◇◇◆◇◇◇◆◇◇◇◇◇◆◇◇◇◇◆◇◇◇◇◇\n◇◇◇◆◇◇◇◇◇◇◇◆◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◆◇◇◇◇◇◆◇◇◇◇◆◇◇◇◇◇\n◇◇◇◆◇◇◇◇◇◇◇◇◆◆◇◇◇◇◇◇◇◇◇◇◇◇◆◇◇◇◇◇◇◆◆◆◆◆◇◇◇◇◇◇\n◇◇◇◆◇◇◇◇◇◇◇◇◇◇◆◆◇◇◇◇◇◇◇◇◇◆◇◇◇◇◇◇◇◆◇◇◇◇◆◇◇◇◇◇\n◇◇◇◆◇◇◇◇◇◇◇◇◇◇◇◇◆◇◇◇◇◇◇◇◆◇◇◇◇◇◇◇◇◆◇◇◇◇◆◇◇◇◇◇\n◇◇◇◆◇◇◇◇◇◇◇◆◇◇◇◇◆◇◇◇◇◇◇◆◇◇◇◇◇◇◇◇◇◆◇◇◇◇◆◇◇◇◇◇\n◇◇◇◆◇◇◇◇◇◇◇◆◇◇◇◇◆◇◇◇◇◇◇◆◇◇◇◇◇◇◇◇◇◆◇◇◇◇◆◇◇◇◇◇\n◇◇◇◆◇◇◇◇◇◇◇◇◆◆◆◆◇◇◇◇◇◇◇◆◆◆◆◆◇◇◇◇◇◆◆◆◆◆◇◇◇◇◇◇\n◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇\n◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇"
        elif b is 1:
            return "◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇\n◇◇◇◆◇◇◇◇◇◇◇◇◆◆◆◆◇◇◇◇◇◇◇◇◇◆◇◇◇◇◇◇◇◆◆◆◆◆◇◇◇◇◇◇\n◇◇◆◆◇◇◇◇◇◇◇◆◇◇◇◇◆◇◇◇◇◇◇◇◆◆◇◇◇◇◇◇◇◆◇◇◇◇◆◇◇◇◇◇\n◇◇◇◆◇◇◇◇◇◇◇◆◇◇◇◇◆◇◇◇◇◇◇◇◇◆◇◇◇◇◇◇◇◆◇◇◇◇◆◇◇◇◇◇\n◇◇◇◆◇◇◇◇◇◇◇◆◇◇◇◇◇◇◇◇◇◇◇◇◇◆◇◇◇◇◇◇◇◆◇◇◇◇◆◇◇◇◇◇\n◇◇◇◆◇◇◇◇◇◇◇◇◆◆◇◇◇◇◇◇◇◇◇◇◇◆◇◇◇◇◇◇◇◆◆◆◆◆◇◇◇◇◇◇\n◇◇◇◆◇◇◇◇◇◇◇◇◇◇◆◆◇◇◇◇◇◇◇◇◇◆◇◇◇◇◇◇◇◆◇◇◇◇◆◇◇◇◇◇\n◇◇◇◆◇◇◇◇◇◇◇◇◇◇◇◇◆◇◇◇◇◇◇◇◇◆◇◇◇◇◇◇◇◆◇◇◇◇◆◇◇◇◇◇\n◇◇◇◆◇◇◇◇◇◇◇◆◇◇◇◇◆◇◇◇◇◇◇◇◇◆◇◇◇◇◇◇◇◆◇◇◇◇◆◇◇◇◇◇\n◇◇◇◆◇◇◇◇◇◇◇◆◇◇◇◇◆◇◇◇◇◇◇◇◇◆◇◇◇◇◇◇◇◆◇◇◇◇◆◇◇◇◇◇\n◇◇◇◆◇◇◇◇◇◇◇◇◆◆◆◆◇◇◇◇◇◇◇◇◇◆◇◇◇◇◇◇◇◆◆◆◆◆◇◇◇◇◇◇\n◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇\n◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇"
        elif b is 0:
            return "◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇\n◇◇◇◆◇◇◇◇◇◇◇◇◆◆◆◆◇◇◇◇◇◇◇◇◇◇◆◇◇◆◇◇◇◇◇◇◇◇◇◇◇\n◇◇◆◆◇◇◇◇◇◇◇◆◇◇◇◇◆◇◇◆◇◇◇◇◇◇◆◇◇◆◇◇◇◇◇◇◇◇◇◇◇\n◇◇◇◆◇◇◇◇◇◇◇◆◇◇◇◇◆◇◇◆◇◇◇◇◇◇◇◇◇◆◇◇◇◇◇◇◇◇◇◇◇\n◇◇◇◆◇◇◇◇◇◇◇◆◇◇◇◇◇◇◆◆◆◇◆◇◆◇◆◇◇◆◇◇◇◆◇◇◆◆◆◇◇\n◇◇◇◆◇◇◇◇◇◇◇◇◆◆◇◇◇◇◇◆◇◇◆◆◇◇◆◇◇◆◇◇◆◇◇◆◇◇◇◆◇\n◇◇◇◆◇◇◇◇◇◇◇◇◇◇◆◆◇◇◇◆◇◇◆◇◇◇◆◇◇◆◇◆◇◇◇◆◇◇◇◆◇\n◇◇◇◆◇◇◇◇◇◇◇◇◇◇◇◇◆◇◇◆◇◇◆◇◇◇◆◇◇◆◆◇◇◇◇◆◆◆◆◆◇\n◇◇◇◆◇◇◇◇◇◇◇◆◇◇◇◇◆◇◇◆◇◇◆◇◇◇◆◇◇◆◇◆◇◇◇◆◇◇◇◇◇\n◇◇◇◆◇◇◇◇◇◇◇◆◇◇◇◇◆◇◇◆◇◇◆◇◇◇◆◇◇◆◇◇◆◇◇◆◇◇◇◆◇\n◇◇◇◆◇◇◇◇◇◇◇◇◆◆◆◆◇◇◇◇◆◇◆◇◇◇◆◇◇◆◇◇◇◆◇◇◆◆◆◇◇\n◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇\n◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇"
    elif s is 2:
        if b is 2:
            return "◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇\n◇◇◆◆◆◇◇◇◇◇◇◇◆◆◆◆◇◇◇◇◇◇◇◇◆◆◆◇◇◇◇◇◇◆◆◆◆◆◇◇\n◇◆◇◇◇◆◇◇◇◇◇◆◇◇◇◇◆◇◇◇◇◇◇◆◇◇◇◆◇◇◇◇◇◆◇◇◇◇◆◇\n◇◆◇◇◇◆◇◇◇◇◇◆◇◇◇◇◆◇◇◇◇◇◇◆◇◇◇◆◇◇◇◇◇◆◇◇◇◇◆◇\n◇◇◇◇◇◆◇◇◇◇◇◆◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◆◇◇◇◇◇◆◇◇◇◇◆◇\n◇◇◇◇◆◇◇◇◇◇◇◇◆◆◇◇◇◇◇◇◇◇◇◇◇◇◆◇◇◇◇◇◇◆◆◆◆◆◇◇\n◇◇◇◆◇◇◇◇◇◇◇◇◇◇◆◆◇◇◇◇◇◇◇◇◇◆◇◇◇◇◇◇◇◆◇◇◇◇◆◇\n◇◇◆◇◇◇◇◇◇◇◇◇◇◇◇◇◆◇◇◇◇◇◇◇◆◇◇◇◇◇◇◇◇◆◇◇◇◇◆◇\n◇◆◇◇◇◇◇◇◇◇◇◆◇◇◇◇◆◇◇◇◇◇◇◆◇◇◇◇◇◇◇◇◇◆◇◇◇◇◆◇\n◇◆◇◇◇◇◇◇◇◇◇◆◇◇◇◇◆◇◇◇◇◇◇◆◇◇◇◇◇◇◇◇◇◆◇◇◇◇◆◇\n◇◆◆◆◆◆◇◇◇◇◇◇◆◆◆◆◇◇◇◇◇◇◇◆◆◆◆◆◇◇◇◇◇◆◆◆◆◆◇◇\n◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇\n◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇"
        elif b is 1:
            return "◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇\n◇◇◆◆◆◇◇◇◇◇◇◇◆◆◆◆◇◇◇◇◇◇◇◇◇◆◇◇◇◇◇◇◇◆◆◆◆◆◇◇\n◇◆◇◇◇◆◇◇◇◇◇◆◇◇◇◇◆◇◇◇◇◇◇◇◆◆◇◇◇◇◇◇◇◆◇◇◇◇◆◇\n◇◆◇◇◇◆◇◇◇◇◇◆◇◇◇◇◆◇◇◇◇◇◇◇◇◆◇◇◇◇◇◇◇◆◇◇◇◇◆◇\n◇◇◇◇◇◆◇◇◇◇◇◆◇◇◇◇◇◇◇◇◇◇◇◇◇◆◇◇◇◇◇◇◇◆◇◇◇◇◆◇\n◇◇◇◇◆◇◇◇◇◇◇◇◆◆◇◇◇◇◇◇◇◇◇◇◇◆◇◇◇◇◇◇◇◆◆◆◆◆◇◇\n◇◇◇◆◇◇◇◇◇◇◇◇◇◇◆◆◇◇◇◇◇◇◇◇◇◆◇◇◇◇◇◇◇◆◇◇◇◇◆◇\n◇◇◆◇◇◇◇◇◇◇◇◇◇◇◇◇◆◇◇◇◇◇◇◇◇◆◇◇◇◇◇◇◇◆◇◇◇◇◆◇\n◇◆◇◇◇◇◇◇◇◇◇◆◇◇◇◇◆◇◇◇◇◇◇◇◇◆◇◇◇◇◇◇◇◆◇◇◇◇◆◇\n◇◆◇◇◇◇◇◇◇◇◇◆◇◇◇◇◆◇◇◇◇◇◇◇◇◆◇◇◇◇◇◇◇◆◇◇◇◇◆◇\n◇◆◆◆◆◆◇◇◇◇◇◇◆◆◆◆◇◇◇◇◇◇◇◇◇◆◇◇◇◇◇◇◇◆◆◆◆◆◇◇\n◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇\n◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇"
        elif b is 0:
            return "◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇\n◇◇◆◆◆◇◇◇◇◇◇◇◆◆◆◆◇◇◇◇◇◇◇◇◇◇◆◇◇◆◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇\n◇◆◇◇◇◆◇◇◇◇◇◆◇◇◇◇◆◇◇◆◇◇◇◇◇◇◆◇◇◆◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇\n◇◆◇◇◇◆◇◇◇◇◇◆◇◇◇◇◆◇◇◆◇◇◇◇◇◇◇◇◇◆◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇\n◇◇◇◇◇◆◇◇◇◇◇◆◇◇◇◇◇◇◆◆◆◇◆◇◆◇◆◇◇◆◇◇◇◆◇◇◆◆◆◇◇◇◇◆◆◆◇◇\n◇◇◇◇◆◇◇◇◇◇◇◇◆◆◇◇◇◇◇◆◇◇◆◆◇◇◆◇◇◆◇◇◆◇◇◆◇◇◇◆◇◇◆◇◇◇◆◇\n◇◇◇◆◇◇◇◇◇◇◇◇◇◇◆◆◇◇◇◆◇◇◆◇◇◇◆◇◇◆◇◆◇◇◇◆◇◇◇◆◇◇◆◇◇◇◇◇\n◇◇◆◇◇◇◇◇◇◇◇◇◇◇◇◇◆◇◇◆◇◇◆◇◇◇◆◇◇◆◆◇◇◇◇◆◆◆◆◆◇◇◇◆◆◆◇◇\n◇◆◇◇◇◇◇◇◇◇◇◆◇◇◇◇◆◇◇◆◇◇◆◇◇◇◆◇◇◆◇◆◇◇◇◆◇◇◇◇◇◇◇◇◇◇◆◇\n◇◆◇◇◇◇◇◇◇◇◇◆◇◇◇◇◆◇◇◆◇◇◆◇◇◇◆◇◇◆◇◇◆◇◇◆◇◇◇◆◇◇◆◇◇◇◆◇\n◇◆◆◆◆◆◇◇◇◇◇◇◆◆◆◆◇◇◇◇◆◇◆◇◇◇◆◇◇◆◇◇◇◆◇◇◆◆◆◇◇◇◇◆◆◆◇◇\n◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇\n◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇"
    elif s is 3:
        if b is 1:
            return "◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇\n◇◇◆◆◆◇◇◇◇◇◇◇◆◆◆◆◇◇◇◇◇◇◇◇◇◆◇◇◇◇◇◇◇◆◆◆◆◆◇◇◇◇◇◇\n◇◆◇◇◇◆◇◇◇◇◇◆◇◇◇◇◆◇◇◇◇◇◇◇◆◆◇◇◇◇◇◇◇◆◇◇◇◇◆◇◇◇◇◇\n◇◇◇◇◇◆◇◇◇◇◇◆◇◇◇◇◆◇◇◇◇◇◇◇◇◆◇◇◇◇◇◇◇◆◇◇◇◇◆◇◇◇◇◇\n◇◇◇◇◇◆◇◇◇◇◇◆◇◇◇◇◇◇◇◇◇◇◇◇◇◆◇◇◇◇◇◇◇◆◇◇◇◇◆◇◇◇◇◇\n◇◇◆◆◆◇◇◇◇◇◇◇◆◆◇◇◇◇◇◇◇◇◇◇◇◆◇◇◇◇◇◇◇◆◆◆◆◆◇◇◇◇◇◇\n◇◇◇◇◇◆◇◇◇◇◇◇◇◇◆◆◇◇◇◇◇◇◇◇◇◆◇◇◇◇◇◇◇◆◇◇◇◇◆◇◇◇◇◇\n◇◇◇◇◇◆◇◇◇◇◇◇◇◇◇◇◆◇◇◇◇◇◇◇◇◆◇◇◇◇◇◇◇◆◇◇◇◇◆◇◇◇◇◇\n◇◇◇◇◇◆◇◇◇◇◇◆◇◇◇◇◆◇◇◇◇◇◇◇◇◆◇◇◇◇◇◇◇◆◇◇◇◇◆◇◇◇◇◇\n◇◆◇◇◇◆◇◇◇◇◇◆◇◇◇◇◆◇◇◇◇◇◇◇◇◆◇◇◇◇◇◇◇◆◇◇◇◇◆◇◇◇◇◇\n◇◇◆◆◆◇◇◇◇◇◇◇◆◆◆◆◇◇◇◇◇◇◇◇◇◆◇◇◇◇◇◇◇◆◆◆◆◆◇◇◇◇◇◇\n◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇\n◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇"
        elif b is 0:
            return "◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇\n◇◇◆◆◆◇◇◇◇◇◇◇◆◆◆◆◇◇◇◇◇◇◇◇◇◇◆◇◇◆◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇\n◇◆◇◇◇◆◇◇◇◇◇◆◇◇◇◇◆◇◇◆◇◇◇◇◇◇◆◇◇◆◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇\n◇◇◇◇◇◆◇◇◇◇◇◆◇◇◇◇◆◇◇◆◇◇◇◇◇◇◇◇◇◆◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇\n◇◇◇◇◇◆◇◇◇◇◇◆◇◇◇◇◇◇◆◆◆◇◆◇◆◇◆◇◇◆◇◇◇◆◇◇◆◆◆◇◇◇◇◆◆◆◇◇\n◇◇◆◆◆◇◇◇◇◇◇◇◆◆◇◇◇◇◇◆◇◇◆◆◇◇◆◇◇◆◇◇◆◇◇◆◇◇◇◆◇◇◆◇◇◇◆◇\n◇◇◇◇◇◆◇◇◇◇◇◇◇◇◆◆◇◇◇◆◇◇◆◇◇◇◆◇◇◆◇◆◇◇◇◆◇◇◇◆◇◇◆◇◇◇◇◇\n◇◇◇◇◇◆◇◇◇◇◇◇◇◇◇◇◆◇◇◆◇◇◆◇◇◇◆◇◇◆◆◇◇◇◇◆◆◆◆◆◇◇◇◆◆◆◇◇\n◇◇◇◇◇◆◇◇◇◇◇◆◇◇◇◇◆◇◇◆◇◇◆◇◇◇◆◇◇◆◇◆◇◇◇◆◇◇◇◇◇◇◇◇◇◇◆◇\n◇◆◇◇◇◆◇◇◇◇◇◆◇◇◇◇◆◇◇◆◇◇◆◇◇◇◆◇◇◆◇◇◆◇◇◆◇◇◇◆◇◇◆◇◇◇◆◇\n◇◇◆◆◆◇◇◇◇◇◇◇◆◆◆◆◇◇◇◇◆◇◆◇◇◇◆◇◇◆◇◇◇◆◇◇◆◆◆◇◇◇◇◆◆◆◇◇\n◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇\n◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇"
    elif s is 4:
        return "◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇\n◇◆◇◇◇◆◇◇◇◆◇◇◇◇◇◆◇◇◇◇◇◇◆◆◇◇◇◇◆◇◇◇◇◇◇◆◇◇\n◇◆◇◇◇◆◇◇◇◆◇◇◇◇◇◆◇◇◇◇◇◇◆◆◇◇◇◇◆◇◇◇◇◇◇◆◇◇\n◇◆◇◇◇◆◇◇◇◆◇◇◇◇◇◆◇◇◇◇◇◇◆◇◆◇◇◇◆◇◇◇◇◇◇◆◇◇\n◇◇◆◇◆◇◆◇◆◇◇◇◇◇◇◆◇◇◇◇◇◇◆◇◆◇◇◇◆◇◇◇◇◇◇◆◇◇\n◇◇◆◇◆◇◆◇◆◇◇◇◇◇◇◆◇◇◇◇◇◇◆◇◇◆◇◇◆◇◇◇◇◇◇◆◇◇\n◇◇◆◇◆◇◆◇◆◇◇◇◇◇◇◆◇◇◇◇◇◇◆◇◇◆◇◇◆◇◇◇◇◇◇◆◇◇\n◇◇◆◇◆◇◆◇◆◇◇◇◇◇◇◆◇◇◇◇◇◇◆◇◇◇◆◇◆◇◇◇◇◇◇◆◇◇\n◇◇◇◆◇◇◇◆◇◇◇◇◇◇◇◆◇◇◇◇◇◇◆◇◇◇◆◇◆◇◇◇◇◇◇◇◇◇\n◇◇◇◆◇◇◇◆◇◇◇◇◇◇◇◆◇◇◇◇◇◇◆◇◇◇◇◆◆◇◇◇◇◇◇◆◇◇\n◇◇◇◆◇◇◇◆◇◇◇◇◇◇◇◆◇◇◇◇◇◇◆◇◇◇◇◆◆◇◇◇◇◇◇◆◇◇\n◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇\n◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇"


def find(answer, user_answer):
    s = 0;
    b = 0;
    print(answer)
    print(user_answer)
    for i in range(4):
        for j in range(4):
            if answer[i:i + 1] is user_answer[j:j + 1]:
                if i == j:
                    s += 1
                else:
                    b += 1
                break
    return s, b


def random():
    a = randint(0, 9)
    b = randint(0, 9)
    c = randint(0, 9)
    d = randint(0, 9)

    # 랜덤 숫자
    randnum = []

    randnum.insert(0, a)
    randnum.insert(1, b)
    while randnum[0] == randnum[1]:
        del randnum[1]
        randnum.insert(1, randint(0, 9))
    randnum.insert(2, c)
    while randnum[2] == randnum[0] or randnum[2] == randnum[1]:
        del randnum[2]
        randnum.insert(2, randint(0, 9))
    randnum.insert(3, d)
    while randnum[3] == randnum[0] or randnum[3] == randnum[1] or randnum[3] == randnum[2]:
        del randnum[3]
        randnum.insert(3, randint(0, 9))
    return randnum


def wrong_answer():
    return u'\n'.join(['잘못 입력하셨습니다.'])


def Baseball_Game(text, user_id):
    global dict, Game

    user_answer = text.replace('<@UEXDMJ0HY> ', '')
    if user_answer == '종료':
        del_user_id(user_id)
        return u'\n'.join(['Bye Bye~!'])

    if user_id not in dict:
        list = random()
        dict[user_id] = str(list[0]) + str(list[1]) + str(list[2]) + str(list[3])

    print(user_answer)
    if not is_correct(user_answer):
        print(is_correct(user_answer))
        return wrong_answer()

    answer = dict[user_id]
    s, b = find(answer, user_answer)

    if s == 4:
        del_user_id(user_id)

    result = [check_strike(s, b)]
    return u'\n'.join(result)


def is_correct(user_answer):
    n = 0;
    if len(user_answer) != 4:
        return False
    if not is_int(user_answer):
        return False

    if is_right_answer(user_answer):
        return True
    return False


def is_int(user_answer):
    try:
        int(user_answer)
    except Exception:
        return False
    else:
        return True


def is_right_answer(user_answer):
    for i in range(4):
        for j in range(i + 1, 4):
            if user_answer[i] == user_answer[j]:
                return False
    return True


def game_lists():
    global game_list
    return u'\n'.join(['1. 베이스볼', '2. 업앤다운', '3. 가위바위보', '4. 연애심리테스트', "5. 성격테스트1", "6. 성격테스트2", "7. 31게임", "8. 제작자"])


# 이벤트 핸들하는 함수
def _event_handler(event_type, slack_event):
    print(slack_event["event"])

    global Game
    global game_list
    user_id = slack_event["event"]["user"]
    if event_type == "app_mention":
        channel = slack_event["event"]["channel"]
        text = slack_event["event"]["text"]
        if user_id not in Game:
            game_name = text.replace('<@UEXDMJ0HY> ', '')
            print(game_name)
            if game_name == '<@UEXDMJ0HY>' or game_name == "게임목록":
                keywords = game_lists()
            elif game_name in game_list:
                Game[user_id] = game_name

                if game_name == "연애심리테스트":
                    keywords = example_mind_test_1()
                elif game_name == "성격테스트1":
                    keywords = example_mind_test_2()
                elif game_name == "성격테스트2":
                    keywords = example_mind_test_3()
                elif game_name == "제작자":
                    keywords = made_by(user_id)
                else:
                    keywords = u'\n'.join([game_name + " 시작!"])
            else:
                keywords = wrong_answer()
        else:
            game_name = Game[user_id]
            if game_name == '베이스볼':
                keywords = Baseball_Game(text, user_id)
            elif game_name == '업앤다운':
                keywords = up_and_down(text, user_id)
            elif game_name == '가위바위보':
                keywords = game_rock_paper_scissors(text, user_id)
            elif game_name == '연애심리테스트':
                keywords = mind_test_1(text, user_id)
            elif game_name == '성격테스트1':
                keywords = mind_test_2(text, user_id)
            elif game_name == '성격테스트2':
                keywords = mind_test_3(text, user_id)
            elif game_name == '31게임':
                keywords = thirtyone_game(text, user_id)
        sc.api_call(
            "chat.postMessage",
            channel=channel,
            text=keywords
        )

        return make_response("App mention message has been sent", 200, )

    # ============= Event Type Not Found! ============= #
    # If the event_type does not have a handler
    message = "You have not added an event handler for the %s" % event_type
    # Return a helpful error message
    return make_response(message, 200, {"X-Slack-No-Retry": 1})


@app.route("/listening", methods=["GET", "POST"])
def hears():
    slack_event = json.loads(request.data)

    if slack_event['event_time'] < (datetime.datetime.now() - datetime.timedelta(seconds=6)).timestamp():
        return make_response("this message is before sent.", 200, {"X-Slack-No-Retry": 1})

    if "challenge" in slack_event:
        return make_response(slack_event["challenge"], 200, {"content_type":
                                                                 "application/json"
                                                             })

    if slack_verification != slack_event.get("token"):
        message = "Invalid Slack verification token: %s" % (slack_event["token"])
        make_response(message, 403, {"X-Slack-No-Retry": 1})

    if "event" in slack_event:
        event_type = slack_event["event"]["type"]
        return _event_handler(event_type, slack_event)

    # If our bot hears things that are not events we've subscribed to,
    # send a quirky but helpful error response
    return make_response("[NO EVENT IN SLACK REQUEST] These are not the droids\
                         you're looking for.", 404, {"X-Slack-No-Retry": 1})


@app.route("/", methods=["GET"])
def index():
    return "<h1>Server is ready.</h1>"


if __name__ == '__main__':
    app.run('0.0.0.0', port=5000)
